// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
// # You can use CoffeeScript in this file: http://coffeescript.org/
$('.carriers.show').ready(function() {

  $.ajax({
    type: "GET",
    contentType: "application/json; charset=utf-8",
    url: 'data',
    data: {'id': $('#metro-map').data('params-id')},
    dataType: 'json',
    success: function (data) {
      $.getJSON('usData', function(usData){
        draw(usData, data);
      })
    },
      error: function (result) {
      error();
    }
  });

  function draw(us, data){

    var width = 960;
    var height = 500;

    var radius = d3.scale.sqrt()
        .domain([0, 1e6])
        .range([0, 8]);

    var path = d3.geo.path();

    var svg = d3.select("#metro-map").append("svg")
        .attr("width", width)
        .attr("height", height);

    ready(us, data);

    function numberWithCommas(x) {
      return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }

    function ready(us, mapData) {
      // if (error) throw error;

      var tip = d3.tip()
        .attr('class', 'd3-tip')
        .offset([-10, 0])
        .html(function(d) {
          return d.properties.name +": " + numberWithCommas(d.properties.population);
        })

      svg.append("path")
          .attr("class", "states")
          .datum(topojson.feature(us, us.objects.states))
          .attr("d", path)

      svg.selectAll(".symbol")
          .data(mapData.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))
          .enter().append("path")
          .attr("class", "symbol")
          .attr("d", path.pointRadius(function(d) { return radius(d.properties.population); }))
          .on('mouseover', tip.show)
          .on('mouseout', tip.hide);

      svg.call(tip);

    }
  }
});